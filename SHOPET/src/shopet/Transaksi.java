/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopet;

/**
 *
 * @author Indri
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
//import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Transaksi extends javax.swing.JFrame {
        int Hrg;
        int Buy;
        int pay;
        int JumlahBayar;
        int Kembalian;
        int TotalBelanja;

    /**
     * Creates new form Transaksi
     */
    
   DefaultTableModel model;
    
    public Transaksi() {
        initComponents();
        //id_auto();
      idtransauto();
      TotalinSemua();
        
        namaKaryawan.setText(Login.namakar); // Buat Masukkin nama kita Otomatis 
        
        /*
        Code untuk membuat nama kolom pada tabel produk
        */
        
            String [] judul = {"Employee","ID Transaction","ID Product","Product","Price","QTY","Total"};
            model = new DefaultTableModel(judul,0);
            tabeltransaksi.setModel(model);
            comboProduct();
            comboNameCustomer();
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
   /* private void id_auto(){
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
            ResultSet rs = cn.createStatement().executeQuery("SELECT max(right(no,4))as no from transaction");
            while(rs.next()){
                if (rs.first() == false){
                    nofaktur.setText("TRA0001");
                }else{
                    rs.last();
                    int set_id = rs.getInt(1)+1;
                   String no = String.valueOf(set_id);
                   int id_next = no.length();
                   for (int a = 0 ; a <4 - id_next; a++){
                       no = "0" + no;                       
                   }
                   nofaktur.setText("TRA" + no);
                    
                }
            }
            
        }   catch (SQLException ex) {
                Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
            }
    }*/
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        faktur = new javax.swing.JLabel();
        karyawan = new javax.swing.JLabel();
        barang = new javax.swing.JLabel();
        Hargabarang = new javax.swing.JLabel();
        jumlah = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();
        nofaktur = new javax.swing.JTextField();
        namaKaryawan = new javax.swing.JTextField();
        Harga = new javax.swing.JTextField();
        Beli = new javax.swing.JTextField();
        IDProduct = new javax.swing.JTextField();
        totalsemua = new javax.swing.JTextField();
        cmbBarang = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabeltransaksi = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        Totalbelanja = new javax.swing.JLabel();
        TotalBayar = new javax.swing.JLabel();
        Uang = new javax.swing.JTextField();
        TOTALSEMUA = new javax.swing.JLabel();
        cmbCus = new javax.swing.JComboBox<>();
        IDCus = new javax.swing.JTextField();
        Kembaliann = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        faktur1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Backgound = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        faktur.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        faktur.setText("ID Transaction");
        getContentPane().add(faktur, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 145, -1, -1));

        karyawan.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        karyawan.setText("ID Employee");
        getContentPane().add(karyawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, -1));

        barang.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        barang.setText("Product");
        getContentPane().add(barang, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, -1, -1));

        Hargabarang.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Hargabarang.setText("Price");
        getContentPane().add(Hargabarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 320, -1, -1));

        jumlah.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jumlah.setText("QTY");
        getContentPane().add(jumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 320, -1, -1));

        Total.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Total.setText("Total");
        getContentPane().add(Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 320, -1, -1));

        nofaktur.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        nofaktur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nofakturActionPerformed(evt);
            }
        });
        getContentPane().add(nofaktur, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 145, 120, -1));

        namaKaryawan.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        getContentPane().add(namaKaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 120, -1));

        Harga.setEditable(false);
        Harga.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Harga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HargaActionPerformed(evt);
            }
        });
        getContentPane().add(Harga, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 320, 110, -1));

        Beli.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Beli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BeliActionPerformed(evt);
            }
        });
        Beli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BeliKeyReleased(evt);
            }
        });
        getContentPane().add(Beli, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 320, 50, -1));

        IDProduct.setEditable(false);
        IDProduct.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        getContentPane().add(IDProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 120, -1));

        totalsemua.setEditable(false);
        totalsemua.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        getContentPane().add(totalsemua, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 320, 130, -1));

        cmbBarang.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        cmbBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Products Here" }));
        cmbBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBarangActionPerformed(evt);
            }
        });
        getContentPane().add(cmbBarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 270, -1));

        tabeltransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        tabeltransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabeltransaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabeltransaksi);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 1180, 150));

        btnPrint.setBackground(new java.awt.Color(244, 245, 240));
        btnPrint.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/accept (2).png"))); // NOI18N
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 540, 120, 50));

        btnEdit.setBackground(new java.awt.Color(244, 245, 240));
        btnEdit.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/EDIT 32.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 600, 120, 50));

        btnHapus.setBackground(new java.awt.Color(244, 245, 240));
        btnHapus.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/DELETE 32.png"))); // NOI18N
        btnHapus.setText("Delete");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 600, 120, 50));

        btnReset.setBackground(new java.awt.Color(244, 245, 240));
        btnReset.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/RESET 32.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 540, 120, 50));

        btnHome.setBackground(new java.awt.Color(244, 245, 240));
        btnHome.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/MENU 32.png"))); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        getContentPane().add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 600, 120, 50));

        btnTambah.setBackground(new java.awt.Color(244, 245, 240));
        btnTambah.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/carts.png"))); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        getContentPane().add(btnTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 540, 120, 50));

        Totalbelanja.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        Totalbelanja.setText("Total Belanja");
        getContentPane().add(Totalbelanja, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 550, -1, -1));

        TotalBayar.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        TotalBayar.setText("Total Bayar");
        getContentPane().add(TotalBayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 550, -1, -1));

        Uang.setFont(new java.awt.Font("Tw Cen MT", 1, 28)); // NOI18N
        Uang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UangActionPerformed(evt);
            }
        });
        getContentPane().add(Uang, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 585, 140, 45));

        TOTALSEMUA.setFont(new java.awt.Font("Tw Cen MT", 1, 28)); // NOI18N
        TOTALSEMUA.setForeground(new java.awt.Color(0, 153, 51));
        getContentPane().add(TOTALSEMUA, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 585, 140, 45));

        cmbCus.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        cmbCus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Customer" }));
        cmbCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCusActionPerformed(evt);
            }
        });
        getContentPane().add(cmbCus, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 203, 150, -1));

        IDCus.setEditable(false);
        IDCus.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        IDCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDCusActionPerformed(evt);
            }
        });
        getContentPane().add(IDCus, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 203, 140, -1));

        Kembaliann.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        Kembaliann.setForeground(new java.awt.Color(51, 0, 204));
        getContentPane().add(Kembaliann, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 585, 140, 45));

        jLabel15.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Rp");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 590, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 51));
        jLabel16.setText("Rp");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 590, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 0, 204));
        jLabel17.setText("Rp");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 590, -1, -1));

        faktur1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        faktur1.setText("Customer");
        getContentPane().add(faktur1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 203, -1, -1));

        jPanel2.setBackground(new java.awt.Color(250, 177, 160));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/PENJUALAN 64.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(124, 68, 39));
        jLabel2.setText("Transaction / Cashier Shopet");

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(124, 68, 39));
        jLabel3.setText("Welcome and Happy Shopping");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(395, 395, 395)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(358, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(jLabel1))
                .addGap(15, 15, 15))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1260, -1));

        Backgound.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/backg.jpg"))); // NOI18N
        getContentPane().add(Backgound, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1260, 680));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 260, 70, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void TotalinSemua(){
      /*
        Membuat Methode untuk mentotalkan semua belanjaan yang diambil dari setiap baris di dalam index ke-enam "Total"
        Lalu jumlahnya akan ditampilkan di jLabel TOTALSEMUA
        dan methode tersebut akan dipanggil kedalam Button Tambah, Supaya Methode nya bisa aktif
      */
      
            DefaultTableModel dataModel = (DefaultTableModel) tabeltransaksi.getModel();
                int total = 0;
                for (int i = 0; i<tabeltransaksi.getRowCount();i++){
                    int amount = Integer.parseInt((String)tabeltransaksi.getValueAt(i,6));   // (i,6) maksudnya index ke-enam pada tabel "Total"
                    total += amount;
                }
                   TOTALSEMUA.setText(""+total);
    }
    
    public void Kembali(){
     /*
        Membuat Methode Kembalian
        Dimana saat Karyawan memasukkan jumlah uang di dalam jTextfield saat di enter
        akan otomatis terhitung uang kembalian yang harus di kasih ke pelanggan nantinya
     */
     
            JumlahBayar = Integer.parseInt(Uang.getText());
            TotalBelanja = Integer.parseInt(TOTALSEMUA.getText());

            Kembalian = JumlahBayar - TotalBelanja;
            Kembaliann.setText(""+Integer.toString(Kembalian));
    }
    
    private void cmbBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBarangActionPerformed
        // TODO add your handling code here :
     
     /*
        Dimasukkan Methode yang tadi telah dibuat, Maka baru akan terlihat Hasilnya
     */
     
        comboPrice();
        comboIDProduct();
        comboStock();
    }//GEN-LAST:event_cmbBarangActionPerformed

    private void nofakturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nofakturActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nofakturActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        
      /*
        Masuk ke Page Menu
      */
      
        Menu mn =  new Menu();
        mn.setVisible(true);
        mn.pack();
        mn.setLocationRelativeTo(null);
        mn.setDefaultCloseOperation(Menu.EXIT_ON_CLOSE);

    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnEditActionPerformed

    private void UangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UangActionPerformed
        // TODO add your handling code here:
        
     /*
       Dimasukkan methode kembali, Supaya Methode yang telah dibuat bisa jalan dan berfungsi
       untuk menghitung kembalian
     */
     
        Kembali();
    }//GEN-LAST:event_UangActionPerformed

    private void HargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HargaActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_HargaActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
    
      /*
        Fungsi untuk Menampilkan data barang di tabel yang dibeli setelah ditambahkan
        ini hanya disimpan secara sementara saja
      */   
            DefaultTableModel dataModel = (DefaultTableModel)tabeltransaksi.getModel();
            List list = new ArrayList <>();
            tabeltransaksi.setAutoCreateColumnsFromModel(true);
                list.add(namaKaryawan.getText());
                list.add(nofaktur.getText());
                list.add(IDProduct.getText());
                list.add(cmbBarang.getSelectedItem());
                list.add(Harga.getText());
                list.add(Beli.getText());
                list.add(totalsemua.getText());
            dataModel.addRow(list.toArray());
            TotalinSemua();
            
     /*
        Untuk menyimpan data ke Database Transaction
     */
      
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
            cn.createStatement().executeUpdate("INSERT INTO transaction(IDTransaction,IDEmployee,IDCustomer,IDProduct,QTY,SubTotal,Pay,MoneyChanges)VALUES "+
                                               "('"+nofaktur.getText()+
                                               "','"+namaKaryawan.getText()+
                                               "','"+IDCus.getText()+
                                               "','"+IDProduct.getText()+
                                               "','"+Beli.getText()+
                                               "','"+totalsemua.getText()+
                                               "','"+Uang.getText()+
                                               "','"+Kembaliann.getText()+"')");

        } catch (SQLException ex) {
                 Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
             }    
        
        
      
      /*
        Untuk update stok barang/mengurangi barang setelah pembelian
      */
      
        Integer stokbarang,jumlahbeli,Sisastok;
        stokbarang=Integer.parseInt(jTextField1.getText());
        jumlahbeli=Integer.parseInt(Beli.getText());
        
        Sisastok =(stokbarang-jumlahbeli);
        
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
            cn.createStatement().executeUpdate("update product set "
                                                   + "Stock ='"+Sisastok+
                                                   "' where IDProduct ='"+IDProduct.getText()+"'");
        } catch (SQLException ex) {
                 Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
             }    
        
        
        IDProduct.setText("");
        Harga.setText("");
        Beli.setText("");
        totalsemua.setText("");
            
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintActionPerformed

    private void tabeltransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabeltransaksiMouseClicked
        // TODO add your handling code here:
        int i = tabeltransaksi.getSelectedRow();
      /* 
        Buat Munculin Isi tabel di text field saat tabel di klik
      */
      
            namaKaryawan.setText(model.getValueAt(i,0).toString());
            nofaktur.setText(model.getValueAt(i,1).toString());
            IDProduct.setText(model.getValueAt(i,2).toString());
            Harga.setText(model.getValueAt(i,4).toString());
            Beli.setText(model.getValueAt(i,5).toString());
            totalsemua.setText(model.getValueAt(i,6).toString());
    }//GEN-LAST:event_tabeltransaksiMouseClicked

    private void BeliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BeliKeyReleased
        // TODO add your handling code here:
        
        Integer price,jual,totalprice,stokbrng;
        price = Integer.parseInt(Harga.getText());
        jual = Integer.parseInt(Beli.getText());
        stokbrng=Integer.parseInt(jTextField1.getText());
        
        /*
          Membuat fungsi dimana jika barang yang dibeli melebihi jumlah stok, maka pesanan akan 
          dibatalkan secara otomatis, dan akan muncul pesan pemberitahuan melalui JOptionPane
        */
        
        if (stokbrng < jual)
        {
            JOptionPane.showMessageDialog(rootPane, "Sorry insufficient stock");
            IDProduct.setText("");
            Harga.setText("");
            Beli.setText("");
            totalsemua.setText("");
        }
        else
        {
            /*
               Menghitung Subtotal pada tabel secara otomatis
            */
            
            totalprice = (price*jual);
            totalsemua.setText(String.valueOf(totalprice));
        }      
    }//GEN-LAST:event_BeliKeyReleased

    private void cmbCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCusActionPerformed
        // TODO add your handling code here:
        comboIDCustomer();
    }//GEN-LAST:event_cmbCusActionPerformed

    private void IDCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDCusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDCusActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnResetActionPerformed

    private void BeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BeliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BeliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Backgound;
    private javax.swing.JTextField Beli;
    private javax.swing.JTextField Harga;
    private javax.swing.JLabel Hargabarang;
    private javax.swing.JTextField IDCus;
    private javax.swing.JTextField IDProduct;
    private javax.swing.JLabel Kembaliann;
    private javax.swing.JLabel TOTALSEMUA;
    private javax.swing.JLabel Total;
    private javax.swing.JLabel TotalBayar;
    private javax.swing.JLabel Totalbelanja;
    private javax.swing.JTextField Uang;
    private javax.swing.JLabel barang;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cmbBarang;
    private javax.swing.JComboBox<String> cmbCus;
    private javax.swing.JLabel faktur;
    private javax.swing.JLabel faktur1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jumlah;
    private javax.swing.JLabel karyawan;
    private javax.swing.JTextField namaKaryawan;
    private javax.swing.JTextField nofaktur;
    private javax.swing.JTable tabeltransaksi;
    private javax.swing.JTextField totalsemua;
    // End of variables declaration//GEN-END:variables

    private void comboProduct(){
     /*
       Untuk menampilkan/menarik nama product yang telah di input dari database ke combo Box
     */
        
           try {
               Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
               ResultSet rs = cn.createStatement().executeQuery("SELECT Product from product order by Product asc");
                    while (rs.next()){
                        Object[] ob = new Object[4];
                        ob[0]=rs.getString(1);

                   cmbBarang.addItem((String) ob[0]);
               }
           } catch (SQLException ex) {
               Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
           }
        }

    private void comboPrice(){
      /*
        Untuk menampilkan/menarik Harga suatu product setelah ada pemilihan di dalam combo box pada methode comboproduct
      */
      
        try {
               Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
               ResultSet rs = cn.createStatement().executeQuery("SELECT Product, SellingPrice, IDProduct from product where Product='"+cmbBarang.getSelectedItem()+"'");
               while (rs.next()){
                   Object[] ob = new Object[4];
                   ob[0]=rs.getString(1);
                   ob[1]=rs.getString(2);
                   ob[2]=rs.getString(3);

                   Harga.setText((String) ob[1]);
               }
           } catch (SQLException ex) {
               Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
           }
    }

    private void comboIDProduct(){
      /*
        Untuk menampilkan/menarik ID suatu product setelah ada pemilihan di dalam combo box pada methode comboproduct
      */
      
        try {
               Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
               ResultSet rs = cn.createStatement().executeQuery("SELECT Product, SellingPrice, IDProduct from product where Product='"+cmbBarang.getSelectedItem()+"'");
               while (rs.next()){
                   Object[] ob = new Object[4];
                   ob[0]=rs.getString(1);
                   ob[1]=rs.getString(2);
                   ob[2]=rs.getString(3);

                   IDProduct.setText((String) ob[2]);
               }
           } catch (SQLException ex) {
               Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
           }
    }
    
    private void comboStock(){
        try {
               Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
               ResultSet rs = cn.createStatement().executeQuery("SELECT Product, SellingPrice, IDProduct , Stock from product where Product='"+cmbBarang.getSelectedItem()+"'");
               while (rs.next()){
                   Object[] ob = new Object[4];
                   ob[0]=rs.getString(1);
                   ob[1]=rs.getString(2);
                   ob[2]=rs.getString(3);
                   ob[3]= rs.getString(4);

                   jTextField1.setText((String) ob[3]);
               }
           } catch (SQLException ex) {
               Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
           }
    }

    private void comboNameCustomer(){
      /*
       Untuk menampilkan combo Name Customer/menarik nama Customer yang telah di input dari database ke combo Box
     */
      
            try {
                   Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
                   ResultSet rs = cn.createStatement().executeQuery("SELECT NameCust from customer order by IDCustomer asc");
                        while (rs.next()){
                            Object[] ob = new Object[2];
                            ob[0]=rs.getString(1);

                       cmbCus.addItem((String) ob[0]);
                   }
            } catch (SQLException ex) {
                   Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    private void comboIDCustomer(){
      /*
       Untuk menampilkan/menarik ID Customer ketika cmbcus di klik
     */
      
            try {
                   Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
                   ResultSet rs = cn.createStatement().executeQuery("SELECT NameCust, IDCustomer from customer where NameCust='"+cmbCus.getSelectedItem()+"'");
                        while (rs.next()){
                            Object[] ob = new Object[2];
                            ob[0]=rs.getString(1);
                            ob[1]=rs.getString(2);

                       IDCus.setText((String) ob[1]);
                   }
            } catch (SQLException ex) {
                   Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
            }  
    }
    private void idtransauto(){
      /*
        Membuat fungsi IDtrans dibuat secara otomatis
        bertujuan supaya tidak ada IDtrans yang sama setiap customer
      */
      
         try {
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/shopet2","root","");
                ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM transaction order by IDTransaction");
                if (rs.next()) {
                    String IDTransaction = rs.getString("IDTransaction").substring(1);
                    String SA = "" +(Integer.parseInt(nofaktur.getText())+1);
                    String Nol = "";

                    if(SA.length()==1) 
                        {Nol = "000";
                    } else if(SA.length()==2)
                        {Nol = "00";
                    } else if(SA.length()==3)
                        {Nol = "0";
                    } else if(SA.length()==4)
                        {Nol = "";}

                    nofaktur.setText("TR" + Nol + SA);
                } else {
                    nofaktur.setText("TR0001");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
            }
     }
}
